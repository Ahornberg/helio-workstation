language: generic
sudo: false

notifications:
  email: false

git:
  depth: 10
  submodules_depth: 10

branches:
  only:
    - master
    - develop
    - /^\d+\.?\d+\.?\d*$/

stages:
  - test
  - deploy

addons_shortcuts:
  addons_gcc6: &gcc5
    apt:
      packages: [ 'libfreetype6-dev', 'libx11-dev', 'libxinerama-dev', 'libxrandr-dev', 'libxcursor-dev', 'libxcomposite-dev', 'mesa-common-dev', 'freeglut3-dev', 'libcurl4-gnutls-dev+', 'libasound2-dev', 'libjack-dev', 'unzip', 'xvfb' ]
  addons_clang7: &clang7
    apt:
      packages: [ 'libc++-dev', 'libfreetype6-dev', 'libx11-dev', 'libxinerama-dev', 'libxrandr-dev', 'libxcursor-dev', 'libxcomposite-dev', 'mesa-common-dev', 'freeglut3-dev', 'libcurl4-gnutls-dev+', 'libasound2-dev', 'libjack-dev', 'unzip', 'xvfb' ]
    ssh_known_hosts: helio.fm
  addons_deploy: &deploy
    ssh_known_hosts: helio.fm

jobs:
  include:
    - name: "gcc 5, debug build x64"
      stage: test
      os: linux
      dist: xenial
      addons: *gcc5
      env: BUILD_TYPE=linux CONFIG=Tests DISPLAY=localhost:1.0 CFLAGS=-fno-pie
    - name: "clang 7, release build x64"
      stage: deploy
      os: linux
      dist: xenial
      addons: *clang7
      env: BUILD_TYPE=linux CC=clang CXX=clang++ CONFIG=Release64 DISPLAY=localhost:1.0 CFLAGS=-stdlib=libc++ LDFLAGS=-stdlib=libc++
    - name: "xcode 10.1 mac, release build"
      stage: deploy
      os: osx
      osx_image: xcode10.1
      xcode_sdk: macosx10.14
      addons: *deploy
      env: BUILD_TYPE=osx
    - name: "xcode 10.1 ios, release build"
      stage: deploy
      os: osx
      osx_image: xcode10.1
      xcode_sdk: iphoneos
      addons: *deploy
      env: BUILD_TYPE=ios
    - name: "android 21, release build"
      stage: deploy
      os: linux
      dist: trusty
      language: android
      jdk: oraclejdk8
      addons: *deploy
      env: BUILD_TYPE=android ANDROID_NDK_HOME=${ANDROID_HOME}/ndk-bundle
      android:
        components:
          - tools
          - platform-tools
          - build-tools-28.0.3
          - android-28
      before_cache:
        - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
        - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
      cache:
        directories:
         - $HOME/.gradle/caches/
         - $HOME/.gradle/wrapper/
    - name: "docs"
      stage: deploy
      os: linux
      dist: trusty
      language: rust
      rust: stable
      cache: cargo
      addons: *deploy
      env: BUILD_TYPE=docs

before_script:
  - bash ${TRAVIS_BUILD_DIR}/Projects/Deployment/Travis/setup-${BUILD_TYPE}.sh

script:
  - if [[ "${BUILD_TYPE}" == "linux" ]]; then
      xvfb-run -a bash -c 'cd Projects/LinuxMakefile && make all strip';
      if [[ "${TRAVIS_BUILD_STAGE_NAME}" == "Test" ]]; then
        xvfb-run -a Projects/LinuxMakefile/build/Helio;
      fi
    fi
  - if [[ "${BUILD_TYPE}" == "android" ]]; then
      cd Projects/Android && chmod +x gradlew && ./gradlew clean assembleRelease;
    fi
  - if [[ "${BUILD_TYPE}" == "osx" && "${TRAVIS_PULL_REQUEST}" == "false" ]]; then
      xcodebuild -project Projects/macOS/Helio.xcodeproj -configuration Release -scheme 'Helio - App' -archivePath /tmp/archive archive;
    fi
  - if [[ "${BUILD_TYPE}" == "ios" && "${TRAVIS_PULL_REQUEST}" == "false" ]]; then
      xcodebuild -project Projects/iOS/Helio.xcodeproj -configuration Release -scheme 'Helio - App' -archivePath /tmp/archive archive;
    fi
  - if [[ "${BUILD_TYPE}" == "docs" && "${TRAVIS_PULL_REQUEST}" == "false" ]]; then
      mdbook build Docs && mdbook test Docs;
    fi

before_deploy:
  - openssl aes-256-cbc -K $encrypted_e6d7a52b0113_key -iv $encrypted_e6d7a52b0113_iv -in ${TRAVIS_BUILD_DIR}/Projects/Deployment/Travis/deploy-rsa.enc -out /tmp/deploy_rsa -d
  - eval "$(ssh-agent -s)"
  - chmod 600 /tmp/deploy_rsa
  - ssh-add /tmp/deploy_rsa

deploy:
  provider: script
  skip_cleanup: true
  script: bash ${TRAVIS_BUILD_DIR}/Projects/Deployment/Travis/deploy-${BUILD_TYPE}.sh
  on:
    all_branches: true
    repo: helio-fm/helio-workstation
    condition: ${TRAVIS_BUILD_STAGE_NAME} = "Deploy"
